{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Proyecto discos-cba\\\\app\\\\components\\\\account\\\\AccountOptions.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem } from \"react-native-elements\";\nimport { map } from \"lodash\";\nimport Modal from \"../Modal\";\nimport ChangeDisplayNameForm from \"./ChangeDisplayNameForm\";\nimport ChangeEmailForm from \"./ChangeEmailForm\";\nimport ChangePasswordForm from \"./ChangePasswordForm\";\nexport default function AccountOptions(props) {\n  var userInfo = props.userInfo,\n      toastRef = props.toastRef,\n      setReloadUserInfo = props.setReloadUserInfo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      renderComponent = _useState4[0],\n      setRenderComponent = _useState4[1];\n\n  var selectedComponent = function selectedComponent(key) {\n    switch (key) {\n      case \"displayName\":\n        setRenderComponent(React.createElement(ChangeDisplayNameForm, {\n          displayName: userInfo.displayName,\n          setShowModal: setShowModal,\n          toastRef: toastRef,\n          setReloadUserInfo: setReloadUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }\n        }));\n        setShowModal(true);\n        break;\n\n      case \"email\":\n        setRenderComponent(React.createElement(ChangeEmailForm, {\n          email: userInfo.email,\n          setShowModal: setShowModal,\n          toastRef: toastRef,\n          setReloadUserInfo: setReloadUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        }));\n        setShowModal(true);\n        break;\n\n      case \"password\":\n        setRenderComponent(React.createElement(ChangePasswordForm, {\n          setShowModal: setShowModal,\n          toastRef: toastRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }));\n        setShowModal(true);\n        break;\n\n      default:\n        setRenderComponent(null);\n        setShowModal(false);\n        break;\n    }\n  };\n\n  var menuOptions = generateOptions(selectedComponent);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, map(menuOptions, function (menu, index) {\n    return React.createElement(ListItem, {\n      key: index,\n      title: menu.title,\n      leftIcon: {\n        type: menu.iconType,\n        name: menu.iconNameLeft,\n        color: menu.iconColorLeft\n      },\n      rightIcon: {\n        type: menu.iconType,\n        name: menu.iconNameRight,\n        color: menu.iconColorRight\n      },\n      containerStyle: styles.menuItem,\n      onPress: menu.onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    });\n  }), renderComponent && React.createElement(Modal, {\n    isVisible: showModal,\n    setIsVisible: setShowModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, renderComponent));\n}\n\nfunction generateOptions(selectedComponent) {\n  return [{\n    title: \"Cambiar Nombre y Apellido\",\n    iconType: \"material-community\",\n    iconNameLeft: \"account-circle\",\n    iconColorLeft: \"#c1c1c1\",\n    iconNameRight: \"chevron-right\",\n    iconColorRight: \"#c1c1c1\",\n    onPress: function onPress() {\n      return selectedComponent(\"displayName\");\n    }\n  }, {\n    title: \"Cambiar Email\",\n    iconType: \"material-community\",\n    iconNameLeft: \"email\",\n    iconColorLeft: \"#c1c1c1\",\n    iconNameRight: \"chevron-right\",\n    iconColorRight: \"#c1c1c1\",\n    onPress: function onPress() {\n      return selectedComponent(\"email\");\n    }\n  }, {\n    title: \"Cambiar ContraseÃ±a\",\n    iconType: \"material-community\",\n    iconNameLeft: \"lock-reset\",\n    iconColorLeft: \"#c1c1c1\",\n    iconNameRight: \"chevron-right\",\n    iconColorRight: \"#c1c1c1\",\n    onPress: function onPress() {\n      return selectedComponent(\"password\");\n    }\n  }];\n}\n\nvar styles = StyleSheet.create({\n  menuItem: {\n    borderWidth: 1,\n    borderColor: \"#e3e3e3\"\n  }\n});","map":{"version":3,"sources":["D:/Proyecto discos-cba/app/components/account/AccountOptions.js"],"names":["React","useState","ListItem","map","Modal","ChangeDisplayNameForm","ChangeEmailForm","ChangePasswordForm","AccountOptions","props","userInfo","toastRef","setReloadUserInfo","showModal","setShowModal","renderComponent","setRenderComponent","selectedComponent","key","displayName","email","menuOptions","generateOptions","menu","index","title","type","iconType","name","iconNameLeft","color","iconColorLeft","iconNameRight","iconColorRight","styles","menuItem","onPress","StyleSheet","create","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { ListItem } from \"react-native-elements\";\r\nimport { map } from \"lodash\";\r\nimport Modal from \"../Modal\";\r\nimport ChangeDisplayNameForm from \"./ChangeDisplayNameForm\";\r\nimport ChangeEmailForm from \"./ChangeEmailForm\";\r\nimport ChangePasswordForm from \"./ChangePasswordForm\";\r\n\r\nexport default function AccountOptions(props) {\r\n  const { userInfo, toastRef, setReloadUserInfo } = props;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [renderComponent, setRenderComponent] = useState(null);\r\n\r\n  const selectedComponent = (key) => {\r\n    switch (key) {\r\n      case \"displayName\":\r\n        setRenderComponent(\r\n          <ChangeDisplayNameForm\r\n            displayName={userInfo.displayName}\r\n            setShowModal={setShowModal}\r\n            toastRef={toastRef}\r\n            setReloadUserInfo={setReloadUserInfo}\r\n          />\r\n        );\r\n        setShowModal(true);\r\n        break;\r\n      case \"email\":\r\n        setRenderComponent(\r\n          <ChangeEmailForm\r\n            email={userInfo.email}\r\n            setShowModal={setShowModal}\r\n            toastRef={toastRef}\r\n            setReloadUserInfo={setReloadUserInfo}\r\n          />\r\n        );\r\n        setShowModal(true);\r\n        break;\r\n      case \"password\":\r\n        setRenderComponent(\r\n          <ChangePasswordForm setShowModal={setShowModal} toastRef={toastRef} />\r\n        );\r\n        setShowModal(true);\r\n        break;\r\n      default:\r\n        setRenderComponent(null);\r\n        setShowModal(false);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const menuOptions = generateOptions(selectedComponent);\r\n\r\n  return (\r\n    <View>\r\n      {map(menuOptions, (menu, index) => (\r\n        <ListItem\r\n          key={index}\r\n          title={menu.title}\r\n          leftIcon={{\r\n            type: menu.iconType,\r\n            name: menu.iconNameLeft,\r\n            color: menu.iconColorLeft,\r\n          }}\r\n          rightIcon={{\r\n            type: menu.iconType,\r\n            name: menu.iconNameRight,\r\n            color: menu.iconColorRight,\r\n          }}\r\n          containerStyle={styles.menuItem}\r\n          onPress={menu.onPress}\r\n        />\r\n      ))}\r\n      {renderComponent && (\r\n        <Modal isVisible={showModal} setIsVisible={setShowModal}>\r\n          {renderComponent}\r\n        </Modal>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction generateOptions(selectedComponent) {\r\n  return [\r\n    {\r\n      title: \"Cambiar Nombre y Apellido\",\r\n      iconType: \"material-community\",\r\n      iconNameLeft: \"account-circle\",\r\n      iconColorLeft: \"#c1c1c1\",\r\n      iconNameRight: \"chevron-right\",\r\n      iconColorRight: \"#c1c1c1\",\r\n      onPress: () => selectedComponent(\"displayName\"),\r\n    },\r\n    {\r\n      title: \"Cambiar Email\",\r\n      iconType: \"material-community\",\r\n      iconNameLeft: \"email\",\r\n      iconColorLeft: \"#c1c1c1\",\r\n      iconNameRight: \"chevron-right\",\r\n      iconColorRight: \"#c1c1c1\",\r\n      onPress: () => selectedComponent(\"email\"),\r\n    },\r\n    {\r\n      title: \"Cambiar ContraseÃ±a\",\r\n      iconType: \"material-community\",\r\n      iconNameLeft: \"lock-reset\",\r\n      iconColorLeft: \"#c1c1c1\",\r\n      iconNameRight: \"chevron-right\",\r\n      iconColorRight: \"#c1c1c1\",\r\n      onPress: () => selectedComponent(\"password\"),\r\n    },\r\n  ];\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  menuItem: {\r\n    borderWidth: 1,\r\n    borderColor: \"#e3e3e3\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}