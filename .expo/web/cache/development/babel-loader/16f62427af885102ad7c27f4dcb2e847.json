{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Proyecto discos-cba\\\\app\\\\screens\\\\Account\\\\UserLogged.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from \"react-native-elements\";\nimport Toast from \"react-native-easy-toast\";\nimport * as firebase from \"firebase\";\nimport Loading from \"../../components/Loading\";\nimport InfoUser from \"../../components/account/InfoUser\";\nimport AccountOptions from \"../../components/account/AccountOptions\";\nexport default function UserLogged() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setuserInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setloading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingText = _useState6[0],\n      setloadingText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      reloadUserInfo = _useState8[0],\n      setReloadUserInfo = _useState8[1];\n\n  var toastRef = useRef();\n  useEffect(function () {\n    (function _callee() {\n      var user;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().currentUser);\n\n            case 2:\n              user = _context.sent;\n              setuserInfo(user);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    setReloadUserInfo(false);\n  }, [reloadUserInfo]);\n  return React.createElement(View, {\n    style: styles.viewUserInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, userInfo && React.createElement(InfoUser, {\n    userInfo: userInfo,\n    toastRef: toastRef,\n    setloading: setloading,\n    setloadingText: setloadingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(AccountOptions, {\n    userInfo: userInfo,\n    toastRef: toastRef,\n    setReloadUserInfo: setReloadUserInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Cerrar Sesi\\xF3n\",\n    buttonStyle: styles.btnCloseSesion,\n    titleStyle: styles.btnCloseSesionText,\n    onPress: function onPress() {\n      return firebase.auth().signOut();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Toast, {\n    ref: toastRef,\n    position: \"center\",\n    opacity: 0.9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Loading, {\n    Text: loadingText,\n    isVisible: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  viewUserInfo: {\n    minHeight: \"100%\",\n    backgroundColor: \"#f2f2f2\"\n  },\n  btnCloseSesion: {\n    marginTop: 30,\n    borderRadius: 5,\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderColor: \"#ea4d14fa\",\n    margin: 2,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  btnCloseSesionText: {\n    color: \"#ea4d14fa\"\n  }\n});","map":{"version":3,"sources":["D:/Proyecto discos-cba/app/screens/Account/UserLogged.js"],"names":["React","useRef","useState","useEffect","Button","Toast","firebase","Loading","InfoUser","AccountOptions","UserLogged","userInfo","setuserInfo","loading","setloading","loadingText","setloadingText","reloadUserInfo","setReloadUserInfo","toastRef","auth","currentUser","user","styles","viewUserInfo","btnCloseSesion","btnCloseSesionText","signOut","StyleSheet","create","minHeight","backgroundColor","marginTop","borderRadius","borderWidth","borderColor","margin","paddingTop","paddingBottom","color"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Button } from \"react-native-elements\";\r\nimport Toast from \"react-native-easy-toast\";\r\nimport * as firebase from \"firebase\";\r\nimport Loading from \"../../components/Loading\";\r\nimport InfoUser from \"../../components/account/InfoUser\";\r\nimport AccountOptions from \"../../components/account/AccountOptions\";\r\n\r\nexport default function UserLogged() {\r\n  const [userInfo, setuserInfo] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const [loadingText, setloadingText] = useState(\"\");\r\n  const [reloadUserInfo, setReloadUserInfo] = useState(false);\r\n  const toastRef = useRef();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const user = await firebase.auth().currentUser;\r\n      setuserInfo(user);\r\n    })();\r\n    setReloadUserInfo(false);\r\n  }, [reloadUserInfo]);\r\n\r\n  return (\r\n    <View style={styles.viewUserInfo}>\r\n      {userInfo && (\r\n        <InfoUser\r\n          userInfo={userInfo}\r\n          toastRef={toastRef}\r\n          setloading={setloading}\r\n          setloadingText={setloadingText}\r\n        />\r\n      )}\r\n\r\n      <AccountOptions\r\n        userInfo={userInfo}\r\n        toastRef={toastRef}\r\n        setReloadUserInfo={setReloadUserInfo}\r\n      />\r\n\r\n      <Button\r\n        title=\"Cerrar SesiÃ³n\"\r\n        buttonStyle={styles.btnCloseSesion}\r\n        titleStyle={styles.btnCloseSesionText}\r\n        onPress={() => firebase.auth().signOut()}\r\n      />\r\n      <Toast ref={toastRef} position=\"center\" opacity={0.9} />\r\n      <Loading Text={loadingText} isVisible={loading} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  viewUserInfo: {\r\n    minHeight: \"100%\",\r\n    backgroundColor: \"#f2f2f2\",\r\n  },\r\n  btnCloseSesion: {\r\n    marginTop: 30,\r\n    borderRadius: 5,\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ea4d14fa\",\r\n    margin: 2,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  btnCloseSesionText: {\r\n    color: \"#ea4d14fa\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}