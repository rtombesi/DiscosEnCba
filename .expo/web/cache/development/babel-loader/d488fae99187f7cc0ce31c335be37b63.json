{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Proyecto discos-cba\\\\app\\\\components\\\\Cds\\\\ListReviewsCds.js\";\nimport React, { useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Avatar, Rating } from \"react-native-elements\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { map } from \"lodash\";\nimport { firebaseApp } from \"../../utils/firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nvar db = firebase.firestore(firebaseApp);\nexport default function ListReviewsCds(props) {\n  var navigation = props.navigation,\n      idCd = props.idCd;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      userLogged = _useState2[0],\n      setUserLogged = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reviews = _useState4[0],\n      setReviews = _useState4[1];\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    user ? setUserLogged(true) : setUserLogged(false);\n  });\n  useFocusEffect(useCallback(function () {\n    db.collection(\"reviewscds\").where(\"idCd\", \"==\", idCd).get().then(function (response) {\n      var resultReview = [];\n      response.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        resultReview.push(data);\n      });\n      var orderResultReview = resultReview.sort(function (a, b) {\n        a = new Date(a.createAt.seconds * 1000);\n        b = new Date(b.createAt.seconds * 1000);\n        return a > b ? -1 : a < b ? 1 : 0;\n      });\n      setReviews(orderResultReview);\n    });\n  }, []));\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, userLogged ? React.createElement(Button, {\n    title: \"Escribe tu comentario\",\n    buttonStyle: styles.btnAddReview,\n    titleStyle: styles.btnTitleAddReview,\n    icon: {\n      type: \"material-community\",\n      name: \"square-edit-outline\",\n      color: \"#ea4d14fa\"\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"add-review-cd\", {\n        idCd: idCd\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: \"#ea4d14fa\",\n      padding: 20\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"login\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Para escribir un comentario es necesario estar logueado\", \" \", React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"pulse AQU\\xCD para iniciar sesi\\xF3n\"))), map(reviews, function (review, index) {\n    return React.createElement(Review, {\n      key: index,\n      review: review,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nfunction Review(props) {\n  var _props$review = props.review,\n      title = _props$review.title,\n      review = _props$review.review,\n      rating = _props$review.rating,\n      avatarUser = _props$review.avatarUser,\n      createAt = _props$review.createAt;\n  var createReview = new Date(createAt.seconds * 1000);\n  return React.createElement(View, {\n    style: styles.viewReview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.viewImageAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Avatar, {\n    size: \"large\",\n    rounded: true,\n    containerStyle: styles.viewAvatarUser,\n    source: avatarUser ? {\n      uri: avatarUser\n    } : require(\"../../../assets/img/avatar-default.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.viewInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.reviewTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, title), React.createElement(Text, {\n    style: styles.reviewText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, review), React.createElement(Rating, {\n    imageSize: 15,\n    readonly: true,\n    startingValue: rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.reviewDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, createReview.getDate(), \"/\", createReview.getMonth() + 1, \"/\", createReview.getFullYear(), \" - \", createReview.getHours(), \":\", createReview.getMinutes() < 10 ? \"0\" : \"\", createReview.getMinutes())));\n}\n\nvar styles = StyleSheet.create({\n  btnAddReview: {\n    marginTop: 5,\n    backgroundColor: \"transparent\"\n  },\n  btnTitleAddReview: {\n    color: \"#ea4d14fa\",\n    fontSize: 17\n  },\n  viewReview: {\n    flexDirection: \"row\",\n    padding: 10,\n    paddingBottom: 20,\n    borderBottomColor: \"#e3e3e3\",\n    borderBottomWidth: 1\n  },\n  viewImageAvatar: {\n    marginRight: 14\n  },\n  viewAvatarUser: {\n    height: 45,\n    width: 45\n  },\n  viewInfo: {\n    flex: 1,\n    alignItems: \"flex-start\"\n  },\n  reviewTitle: {\n    fontWeight: \"bold\"\n  },\n  reviewText: {\n    color: \"grey\",\n    paddingTop: 2,\n    marginBottom: 5\n  },\n  reviewDate: {\n    marginTop: 5,\n    color: \"grey\",\n    fontSize: 13,\n    position: \"absolute\",\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["D:/Proyecto discos-cba/app/components/Cds/ListReviewsCds.js"],"names":["React","useState","useCallback","Button","Avatar","Rating","useFocusEffect","map","firebaseApp","firebase","db","firestore","ListReviewsCds","props","navigation","idCd","userLogged","setUserLogged","reviews","setReviews","auth","onAuthStateChanged","user","collection","where","get","then","response","resultReview","forEach","doc","data","id","push","orderResultReview","sort","a","b","Date","createAt","seconds","styles","btnAddReview","btnTitleAddReview","type","name","color","navigate","textAlign","padding","fontWeight","fontSize","review","index","Review","title","rating","avatarUser","createReview","viewReview","viewImageAvatar","viewAvatarUser","uri","require","viewInfo","reviewTitle","reviewText","reviewDate","getDate","getMonth","getFullYear","getHours","getMinutes","StyleSheet","create","marginTop","backgroundColor","flexDirection","paddingBottom","borderBottomColor","borderBottomWidth","marginRight","height","width","flex","alignItems","paddingTop","marginBottom","position","right","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Button, Avatar, Rating } from \"react-native-elements\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { map } from \"lodash\";\r\n\r\nimport { firebaseApp } from \"../../utils/firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst db = firebase.firestore(firebaseApp);\r\n\r\nexport default function ListReviewsCds(props) {\r\n  const { navigation, idCd } = props;\r\n  const [userLogged, setUserLogged] = useState(false);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    user ? setUserLogged(true) : setUserLogged(false);\r\n  });\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      db.collection(\"reviewscds\")\r\n        .where(\"idCd\", \"==\", idCd)\r\n        .get()\r\n        .then((response) => {\r\n          const resultReview = [];\r\n          response.forEach((doc) => {\r\n            const data = doc.data();\r\n            data.id = doc.id;\r\n            resultReview.push(data);\r\n          });\r\n          const orderResultReview = resultReview.sort((a, b) => {\r\n            a = new Date(a.createAt.seconds * 1000);\r\n            b = new Date(b.createAt.seconds * 1000);\r\n            return a > b ? -1 : a < b ? 1 : 0;\r\n          });\r\n          setReviews(orderResultReview);\r\n        });\r\n    }, [])\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      {userLogged ? (\r\n        <Button\r\n          title=\"Escribe tu comentario\"\r\n          buttonStyle={styles.btnAddReview}\r\n          titleStyle={styles.btnTitleAddReview}\r\n          icon={{\r\n            type: \"material-community\",\r\n            name: \"square-edit-outline\",\r\n            color: \"#ea4d14fa\",\r\n          }}\r\n          onPress={() =>\r\n            navigation.navigate(\"add-review-cd\", {\r\n              idCd: idCd,\r\n            })\r\n          }\r\n        />\r\n      ) : (\r\n        <View>\r\n          <Text\r\n            style={{ textAlign: \"center\", color: \"#ea4d14fa\", padding: 20 }}\r\n            onPress={() => navigation.navigate(\"login\")}\r\n          >\r\n            Para escribir un comentario es necesario estar logueado{\" \"}\r\n            <Text style={{ fontWeight: \"bold\", fontSize: 15 }}>\r\n              pulse AQUÍ para iniciar sesión\r\n            </Text>\r\n          </Text>\r\n        </View>\r\n      )}\r\n      {map(reviews, (review, index) => (\r\n        <Review key={index} review={review} />\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Review(props) {\r\n  const { title, review, rating, avatarUser, createAt } = props.review;\r\n  const createReview = new Date(createAt.seconds * 1000);\r\n\r\n  return (\r\n    <View style={styles.viewReview}>\r\n      <View style={styles.viewImageAvatar}>\r\n        <Avatar\r\n          size=\"large\"\r\n          rounded\r\n          containerStyle={styles.viewAvatarUser}\r\n          source={\r\n            avatarUser\r\n              ? { uri: avatarUser }\r\n              : require(\"../../../assets/img/avatar-default.jpg\")\r\n          }\r\n        />\r\n      </View>\r\n      <View style={styles.viewInfo}>\r\n        <Text style={styles.reviewTitle}>{title}</Text>\r\n        <Text style={styles.reviewText}>{review}</Text>\r\n        <Rating imageSize={15} readonly startingValue={rating} />\r\n        <Text style={styles.reviewDate}>\r\n          {createReview.getDate()}/{createReview.getMonth() + 1}/\r\n          {createReview.getFullYear()} - {createReview.getHours()}:\r\n          {createReview.getMinutes() < 10 ? \"0\" : \"\"}\r\n          {createReview.getMinutes()}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  btnAddReview: {\r\n    marginTop: 5,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  btnTitleAddReview: {\r\n    color: \"#ea4d14fa\",\r\n    fontSize: 17,\r\n  },\r\n  viewReview: {\r\n    flexDirection: \"row\",\r\n    padding: 10,\r\n    paddingBottom: 20,\r\n    borderBottomColor: \"#e3e3e3\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  viewImageAvatar: {\r\n    marginRight: 14,\r\n  },\r\n  viewAvatarUser: {\r\n    height: 45,\r\n    width: 45,\r\n  },\r\n  viewInfo: {\r\n    flex: 1,\r\n    alignItems: \"flex-start\",\r\n  },\r\n  reviewTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  reviewText: {\r\n    color: \"grey\",\r\n    paddingTop: 2,\r\n    marginBottom: 5,\r\n  },\r\n  reviewDate: {\r\n    marginTop: 5,\r\n    color: \"grey\",\r\n    fontSize: 13,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}