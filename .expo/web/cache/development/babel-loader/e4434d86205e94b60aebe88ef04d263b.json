{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Proyecto discos-cba\\\\app\\\\components\\\\account\\\\ChangeEmailForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, Input } from \"react-native-elements\";\nimport * as firebase from \"firebase\";\nimport { validarEmail } from \"../../utils/validations\";\nimport { reauthenticate } from \"../../utils/api\";\nexport default function ChangeEmailForm(props) {\n  var email = props.email,\n      setShowModal = props.setShowModal,\n      toastRef = props.toastRef,\n      setReloadUserInfo = props.setReloadUserInfo;\n\n  var _useState = useState(defaultValue()),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPassword = _useState4[0],\n      setshowPassword = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errors = _useState6[0],\n      setErrors = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var _onChange = function onChange(e, type) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, type, e.nativeEvent.text)));\n  };\n\n  var onSubmit = function onSubmit() {\n    setErrors({});\n\n    if (!formData.email || email === formData.email) {\n      setErrors({\n        email: \"El email no ha cambiado\"\n      });\n    } else if (!validarEmail(formData.email)) {\n      setErrors({\n        email: \"El email es incorrecto\"\n      });\n    } else if (!formData.password) {\n      setErrors({\n        password: \"La contraseña no puede ser vacía\"\n      });\n    } else {\n      setIsLoading(true);\n      reauthenticate(formData.password).then(function () {\n        firebase.auth().currentUser.updateEmail(formData.email).then(function () {\n          setIsLoading(false);\n          setReloadUserInfo(true);\n          toastRef.current.show(\"Email actualizado correctamente\");\n          setShowModal(false);\n        }).catch(function () {\n          setErrors({\n            email: \"Error al actualizar email\"\n          });\n          setIsLoading(false);\n        });\n      }).catch(function () {\n        setIsLoading(false);\n        setErrors({\n          password: \"La contraseña es incorrecta\"\n        });\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Correo electr\\xF3nico\",\n    containerStyle: styles.input,\n    defaultValue: email || \"\",\n    rightIcon: {\n      type: \"material-community\",\n      name: \"email\",\n      color: \"#c2c2c2\"\n    },\n    onChange: function onChange(e) {\n      return _onChange(e, \"email\");\n    },\n    errorMessage: errors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Contrase\\xF1a\",\n    containerStyle: styles.input,\n    password: true,\n    secureTextEntry: showPassword ? false : true,\n    rightIcon: {\n      type: \"material-community\",\n      name: showPassword ? \"eye-off-outline\" : \"eye-outline\",\n      color: \"#c2c2c2\",\n      onPress: function onPress() {\n        return setshowPassword(!showPassword);\n      }\n    },\n    onChange: function onChange(e) {\n      return _onChange(e, \"password\");\n    },\n    errorMessage: errors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Cambiar Email\",\n    containerStyle: styles.btnContainer,\n    buttonStyle: styles.btn,\n    onPress: onSubmit,\n    loading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar defaultValue = function defaultValue() {\n  return {\n    email: \"\",\n    password: \"\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  view: {\n    alignItems: \"center\",\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  input: {\n    marginBottom: 10\n  },\n  btnContainer: {\n    marginTop: 20,\n    width: \"95%\"\n  },\n  btn: {\n    backgroundColor: \"#ea4d14fa\",\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["D:/Proyecto discos-cba/app/components/account/ChangeEmailForm.js"],"names":["React","useState","Button","Input","firebase","validarEmail","reauthenticate","ChangeEmailForm","props","email","setShowModal","toastRef","setReloadUserInfo","defaultValue","formData","setFormData","showPassword","setshowPassword","errors","setErrors","isLoading","setIsLoading","onChange","e","type","nativeEvent","text","onSubmit","password","then","auth","currentUser","updateEmail","current","show","catch","styles","view","input","name","color","onPress","btnContainer","btn","StyleSheet","create","alignItems","paddingTop","paddingBottom","marginBottom","marginTop","width","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport { Button, Input } from \"react-native-elements\";\r\nimport * as firebase from \"firebase\";\r\nimport { validarEmail } from \"../../utils/validations\";\r\nimport { reauthenticate } from \"../../utils/api\";\r\n\r\nexport default function ChangeEmailForm(props) {\r\n  const { email, setShowModal, toastRef, setReloadUserInfo } = props;\r\n  const [formData, setFormData] = useState(defaultValue());\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = (e, type) => {\r\n    setFormData({ ...formData, [type]: e.nativeEvent.text });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setErrors({});\r\n    if (!formData.email || email === formData.email) {\r\n      setErrors({\r\n        email: \"El email no ha cambiado\",\r\n      });\r\n    } else if (!validarEmail(formData.email)) {\r\n      setErrors({\r\n        email: \"El email es incorrecto\",\r\n      });\r\n    } else if (!formData.password) {\r\n      setErrors({\r\n        password: \"La contraseña no puede ser vacía\",\r\n      });\r\n    } else {\r\n      setIsLoading(true);\r\n      reauthenticate(formData.password)\r\n        .then(() => {\r\n          firebase\r\n            .auth()\r\n            .currentUser.updateEmail(formData.email)\r\n            .then(() => {\r\n              setIsLoading(false);\r\n              setReloadUserInfo(true);\r\n              toastRef.current.show(\"Email actualizado correctamente\");\r\n              setShowModal(false);\r\n            })\r\n            .catch(() => {\r\n              setErrors({ email: \"Error al actualizar email\" });\r\n              setIsLoading(false);\r\n            });\r\n        })\r\n        .catch(() => {\r\n          setIsLoading(false);\r\n          setErrors({ password: \"La contraseña es incorrecta\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.view}>\r\n      <Input\r\n        placeholder=\"Correo electrónico\"\r\n        containerStyle={styles.input}\r\n        defaultValue={email || \"\"}\r\n        rightIcon={{\r\n          type: \"material-community\",\r\n          name: \"email\",\r\n          color: \"#c2c2c2\",\r\n        }}\r\n        onChange={(e) => onChange(e, \"email\")}\r\n        errorMessage={errors.email}\r\n      />\r\n      <Input\r\n        placeholder=\"Contraseña\"\r\n        containerStyle={styles.input}\r\n        password={true}\r\n        secureTextEntry={showPassword ? false : true}\r\n        rightIcon={{\r\n          type: \"material-community\",\r\n          name: showPassword ? \"eye-off-outline\" : \"eye-outline\",\r\n          color: \"#c2c2c2\",\r\n          onPress: () => setshowPassword(!showPassword),\r\n        }}\r\n        onChange={(e) => onChange(e, \"password\")}\r\n        errorMessage={errors.password}\r\n      />\r\n      <Button\r\n        title={\"Cambiar Email\"}\r\n        containerStyle={styles.btnContainer}\r\n        buttonStyle={styles.btn}\r\n        onPress={onSubmit}\r\n        loading={isLoading}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst defaultValue = () => {\r\n  return {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    alignItems: \"center\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n  },\r\n  btnContainer: {\r\n    marginTop: 20,\r\n    width: \"95%\",\r\n  },\r\n  btn: {\r\n    backgroundColor: \"#ea4d14fa\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}