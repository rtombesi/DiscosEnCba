{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Proyecto discos-cba\\\\app\\\\components\\\\Cds\\\\AddCdForm.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport { map, size, filter } from \"lodash\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport uuid from \"random-uuid-v4\";\nimport { firebaseApp } from \"../../utils/firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\nvar db = firebase.firestore(firebaseApp);\nvar widthScreen = Dimensions.get(\"window\").width;\nexport default function AddCdForm(props) {\n  var toastRef = props.toastRef,\n      setIsLoading = props.setIsLoading,\n      navigation = props.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      cdName = _useState2[0],\n      setCdName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cdAutor = _useState4[0],\n      setCdAutor = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cdDescription = _useState6[0],\n      setCdDescription = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageSelected = _useState8[0],\n      setImageSelected = _useState8[1];\n\n  var addCd = function addCd() {\n    if (!cdName || !cdAutor || !cdDescription) {\n      toastRef.current.show(\"Todos los campos son obligatorios\");\n    } else if (size(imageSelected) === 0) {\n      toastRef.current.show(\"El Cd debe tener al menos una foto\");\n    } else {\n      setIsLoading(true);\n      uploadImageStorage().then(function (response) {\n        db.collection(\"cds\").add({\n          name: cdName,\n          author: cdAutor,\n          description: cdDescription,\n          images: response,\n          rating: 0,\n          ratingTotal: 0,\n          quantityVoting: 0,\n          createAt: new Date(),\n          createBy: firebase.auth().currentUser.uid\n        }).then(function () {\n          setIsLoading(false);\n          navigation.navigate(\"cds\");\n        }).catch(function () {\n          setIsLoading(false);\n          toastRef.current.show(\"Error al subir el Cd, intente mas tarde\");\n        });\n      });\n    }\n  };\n\n  var uploadImageStorage = function uploadImageStorage() {\n    var imageBlob;\n    return _regeneratorRuntime.async(function uploadImageStorage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            imageBlob = [];\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(map(imageSelected, function _callee2(image) {\n              var response, blob, ref;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return _regeneratorRuntime.awrap(fetch(image));\n\n                    case 2:\n                      response = _context2.sent;\n                      _context2.next = 5;\n                      return _regeneratorRuntime.awrap(response.blob());\n\n                    case 5:\n                      blob = _context2.sent;\n                      ref = firebase.storage().ref(\"cds\").child(uuid());\n                      _context2.next = 9;\n                      return _regeneratorRuntime.awrap(ref.put(blob).then(function _callee(result) {\n                        return _regeneratorRuntime.async(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.next = 2;\n                                return _regeneratorRuntime.awrap(firebase.storage().ref(\"cds/\" + result.metadata.name).getDownloadURL().then(function (photoUrl) {\n                                  imageBlob.push(photoUrl);\n                                }));\n\n                              case 2:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }));\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            })));\n\n          case 3:\n            return _context3.abrupt(\"return\", imageBlob);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(ImagenCd, {\n    photoCd: imageSelected[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(FormAdd, {\n    setCdName: setCdName,\n    setCdAutor: setCdAutor,\n    setCdDescription: setCdDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(UpLoadImage, {\n    toastRef: toastRef,\n    imageSelected: imageSelected,\n    setImageSelected: setImageSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Crear Nuevo Cd\",\n    onPress: addCd,\n    buttonStyle: styles.btnAddCd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ImagenCd(props) {\n  var photoCd = props.photoCd;\n  return React.createElement(View, {\n    style: styles.viewPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: photoCd ? {\n      uri: photoCd\n    } : require(\"../../../assets/img/no-image.png\"),\n    style: {\n      width: widthScreen,\n      height: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction FormAdd(props) {\n  var setCdName = props.setCdName,\n      setCdAutor = props.setCdAutor,\n      setCdDescription = props.setCdDescription;\n  return React.createElement(View, {\n    style: styles.viewForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Nombre del Cd\",\n    containerStyle: styles.input,\n    onChange: function onChange(e) {\n      return setCdName(e.nativeEvent.text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Nombres de Autor e Int\\xE9rprete\",\n    containerStyle: styles.input,\n    onChange: function onChange(e) {\n      return setCdAutor(e.nativeEvent.text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Descripci\\xF3n del Cd\",\n    multiline: true,\n    inputContainerStyle: styles.textArea,\n    onChange: function onChange(e) {\n      return setCdDescription(e.nativeEvent.text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction UpLoadImage(props) {\n  var toastRef = props.toastRef,\n      imageSelected = props.imageSelected,\n      setImageSelected = props.setImageSelected;\n\n  var imageSelect = function imageSelect() {\n    var resultPermissions, result;\n    return _regeneratorRuntime.async(function imageSelect$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 2:\n            resultPermissions = _context4.sent;\n\n            if (!(resultPermissions === \"denied\")) {\n              _context4.next = 7;\n              break;\n            }\n\n            toastRef.current.show(\"Es necesario aceptar los permisos de la galer√≠a, si lo has rechazado debes ir a Ajustes y activarlos manualmente\", 4000);\n            _context4.next = 11;\n            break;\n\n          case 7:\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              allowsEditing: true,\n              aspect: [4, 3]\n            }));\n\n          case 9:\n            result = _context4.sent;\n\n            if (result.cancelled) {\n              toastRef.current.show(\"Has cerrado sin seleccionar ninuna imagen de la galeria\", 3000);\n            } else {\n              setImageSelected([].concat(_toConsumableArray(imageSelected), [result.uri]));\n            }\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var removeImage = function removeImage(image) {\n    Alert.alert(\"Borrar Imagen\", \"¬øEstas seguro que deseas eliminar la imagen?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Eliminar\",\n      onPress: function onPress() {\n        setImageSelected(filter(imageSelected, function (imageUrl) {\n          return imageUrl !== image;\n        }));\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.viewImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, size(imageSelected) < 4 && React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"camera-plus\",\n    color: \"#7a7a7a\",\n    containerStyle: styles.containerIcon,\n    onPress: imageSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }), map(imageSelected, function (imageCd, index) {\n    return React.createElement(Avatar, {\n      key: index,\n      style: styles.miniatureStyle,\n      source: {\n        uri: imageCd\n      },\n      onPress: function onPress() {\n        return removeImage(imageCd);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: \"100%\"\n  },\n  viewForm: {\n    marginLeft: 10,\n    marginRight: 10\n  },\n  input: {\n    marginBottom: 10\n  },\n  textArea: {\n    height: 100,\n    width: \"100%\",\n    padding: 0,\n    margin: 0\n  },\n  btnAddCd: {\n    backgroundColor: \"#ea4d14fa\",\n    margin: 20\n  },\n  viewImage: {\n    flexDirection: \"row\",\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 30\n  },\n  containerIcon: {\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    marginRight: 10,\n    height: 70,\n    width: 70,\n    backgroundColor: \"#e3e3e3\"\n  },\n  miniatureStyle: {\n    width: 60,\n    height: 60,\n    marginRight: 5\n  },\n  viewPhoto: {\n    alignItems: \"center\",\n    height: 200,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["D:/Proyecto discos-cba/app/components/Cds/AddCdForm.js"],"names":["React","useState","Icon","Avatar","Image","Input","Button","map","size","filter","Permissions","ImagePicker","uuid","firebaseApp","firebase","db","firestore","widthScreen","Dimensions","get","width","AddCdForm","props","toastRef","setIsLoading","navigation","cdName","setCdName","cdAutor","setCdAutor","cdDescription","setCdDescription","imageSelected","setImageSelected","addCd","current","show","uploadImageStorage","then","response","collection","add","name","author","description","images","rating","ratingTotal","quantityVoting","createAt","Date","createBy","auth","currentUser","uid","navigate","catch","imageBlob","Promise","all","image","fetch","blob","ref","storage","child","put","result","metadata","getDownloadURL","photoUrl","push","styles","scrollView","btnAddCd","ImagenCd","photoCd","viewPhoto","uri","require","height","FormAdd","viewForm","input","e","nativeEvent","text","textArea","UpLoadImage","imageSelect","askAsync","CAMERA_ROLL","resultPermissions","launchImageLibraryAsync","allowsEditing","aspect","cancelled","removeImage","Alert","alert","style","onPress","imageUrl","cancelable","viewImage","containerIcon","imageCd","index","miniatureStyle","StyleSheet","create","marginLeft","marginRight","marginBottom","padding","margin","backgroundColor","flexDirection","marginTop","alignContent","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, ScrollView, Alert, Dimensions } from \"react-native\";\r\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\r\nimport { map, size, filter } from \"lodash\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport uuid from \"random-uuid-v4\";\r\nimport { firebaseApp } from \"../../utils/firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\nconst db = firebase.firestore(firebaseApp);\r\n\r\nconst widthScreen = Dimensions.get(\"window\").width;\r\n\r\nexport default function AddCdForm(props) {\r\n  const { toastRef, setIsLoading, navigation } = props;\r\n  const [cdName, setCdName] = useState(\"\");\r\n  const [cdAutor, setCdAutor] = useState(\"\");\r\n  const [cdDescription, setCdDescription] = useState(\"\");\r\n  const [imageSelected, setImageSelected] = useState([]);\r\n\r\n  const addCd = () => {\r\n    if (!cdName || !cdAutor || !cdDescription) {\r\n      toastRef.current.show(\"Todos los campos son obligatorios\");\r\n    } else if (size(imageSelected) === 0) {\r\n      toastRef.current.show(\"El Cd debe tener al menos una foto\");\r\n    } else {\r\n      setIsLoading(true);\r\n      uploadImageStorage().then((response) => {\r\n        db.collection(\"cds\")\r\n          .add({\r\n            name: cdName,\r\n            author: cdAutor,\r\n            description: cdDescription,\r\n            images: response,\r\n            rating: 0,\r\n            ratingTotal: 0,\r\n            quantityVoting: 0,\r\n            createAt: new Date(),\r\n            createBy: firebase.auth().currentUser.uid,\r\n          })\r\n          .then(() => {\r\n            setIsLoading(false);\r\n            navigation.navigate(\"cds\");\r\n          })\r\n          .catch(() => {\r\n            setIsLoading(false);\r\n            toastRef.current.show(\"Error al subir el Cd, intente mas tarde\");\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadImageStorage = async () => {\r\n    const imageBlob = [];\r\n\r\n    await Promise.all(\r\n      map(imageSelected, async (image) => {\r\n        const response = await fetch(image);\r\n        const blob = await response.blob();\r\n        const ref = firebase.storage().ref(\"cds\").child(uuid());\r\n        await ref.put(blob).then(async (result) => {\r\n          await firebase\r\n            .storage()\r\n            .ref(`cds/${result.metadata.name}`)\r\n            .getDownloadURL()\r\n            .then((photoUrl) => {\r\n              imageBlob.push(photoUrl);\r\n            });\r\n        });\r\n      })\r\n    );\r\n    return imageBlob;\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <ImagenCd photoCd={imageSelected[0]} />\r\n      <FormAdd\r\n        setCdName={setCdName}\r\n        setCdAutor={setCdAutor}\r\n        setCdDescription={setCdDescription}\r\n      />\r\n      <UpLoadImage\r\n        toastRef={toastRef}\r\n        imageSelected={imageSelected}\r\n        setImageSelected={setImageSelected}\r\n      />\r\n      <Button\r\n        title=\"Crear Nuevo Cd\"\r\n        onPress={addCd}\r\n        buttonStyle={styles.btnAddCd}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nfunction ImagenCd(props) {\r\n  const { photoCd } = props;\r\n\r\n  return (\r\n    <View style={styles.viewPhoto}>\r\n      <Image\r\n        source={\r\n          photoCd\r\n            ? { uri: photoCd }\r\n            : require(\"../../../assets/img/no-image.png\")\r\n        }\r\n        style={{ width: widthScreen, height: 200 }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction FormAdd(props) {\r\n  const { setCdName, setCdAutor, setCdDescription } = props;\r\n  return (\r\n    <View style={styles.viewForm}>\r\n      <Input\r\n        placeholder=\"Nombre del Cd\"\r\n        containerStyle={styles.input}\r\n        onChange={(e) => setCdName(e.nativeEvent.text)}\r\n      />\r\n      <Input\r\n        placeholder=\"Nombres de Autor e Int√©rprete\"\r\n        containerStyle={styles.input}\r\n        onChange={(e) => setCdAutor(e.nativeEvent.text)}\r\n      />\r\n      <Input\r\n        placeholder=\"Descripci√≥n del Cd\"\r\n        multiline={true}\r\n        inputContainerStyle={styles.textArea}\r\n        onChange={(e) => setCdDescription(e.nativeEvent.text)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction UpLoadImage(props) {\r\n  const { toastRef, imageSelected, setImageSelected } = props;\r\n\r\n  const imageSelect = async () => {\r\n    const resultPermissions = await Permissions.askAsync(\r\n      Permissions.CAMERA_ROLL\r\n    );\r\n    if (resultPermissions === \"denied\") {\r\n      toastRef.current.show(\r\n        \"Es necesario aceptar los permisos de la galer√≠a, si lo has rechazado debes ir a Ajustes y activarlos manualmente\",\r\n        4000\r\n      );\r\n    } else {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n      });\r\n      if (result.cancelled) {\r\n        toastRef.current.show(\r\n          \"Has cerrado sin seleccionar ninuna imagen de la galeria\",\r\n          3000\r\n        );\r\n      } else {\r\n        setImageSelected([...imageSelected, result.uri]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeImage = (image) => {\r\n    Alert.alert(\r\n      \"Borrar Imagen\",\r\n      \"¬øEstas seguro que deseas eliminar la imagen?\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Eliminar\",\r\n          onPress: () => {\r\n            setImageSelected(\r\n              filter(imageSelected, (imageUrl) => imageUrl !== image)\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.viewImage}>\r\n      {size(imageSelected) < 4 && (\r\n        <Icon\r\n          type=\"material-community\"\r\n          name=\"camera-plus\"\r\n          color=\"#7a7a7a\"\r\n          containerStyle={styles.containerIcon}\r\n          onPress={imageSelect}\r\n        />\r\n      )}\r\n      {map(imageSelected, (imageCd, index) => (\r\n        <Avatar\r\n          key={index}\r\n          style={styles.miniatureStyle}\r\n          source={{ uri: imageCd }}\r\n          onPress={() => removeImage(imageCd)}\r\n        />\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    height: \"100%\",\r\n  },\r\n  viewForm: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n  },\r\n  textArea: {\r\n    height: 100,\r\n    width: \"100%\",\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  btnAddCd: {\r\n    backgroundColor: \"#ea4d14fa\",\r\n    margin: 20,\r\n  },\r\n  viewImage: {\r\n    flexDirection: \"row\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    marginTop: 30,\r\n  },\r\n  containerIcon: {\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    marginRight: 10,\r\n    height: 70,\r\n    width: 70,\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  miniatureStyle: {\r\n    width: 60,\r\n    height: 60,\r\n    marginRight: 5,\r\n  },\r\n  viewPhoto: {\r\n    alignItems: \"center\",\r\n    height: 200,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}